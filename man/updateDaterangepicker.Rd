% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/daterangepicker.R
\name{updateDaterangepicker}
\alias{updateDaterangepicker}
\title{updateDaterangepicker}
\usage{
updateDaterangepicker(
  session,
  inputId,
  label = NULL,
  start = NULL,
  end = NULL,
  min = NULL,
  max = NULL,
  icon = NULL,
  options = NULL,
  ranges = NULL,
  rangeNames = NULL,
  style = NULL,
  class = NULL
)
}
\arguments{
\item{session}{The session object passed to function given to shinyServer.}

\item{inputId}{The input ID}

\item{label}{The label for the control, or NULL for no label.}

\item{start}{The beginning date of the initially selected. Must be a Date /
POSIXt or string. If NULL will default to the current day.}

\item{end}{The end date of the initially selected date range. Must be a Date
/ POSIXt or string. If NULL will default to the current day.}

\item{min}{The earliest date a user may select. Must be a Date or string}

\item{max}{The latest date a user may select. Must be a Date or string}

\item{icon}{Icon to display next to the label.}

\item{options}{List of further options. See
\code{\link{daterangepickerOptions}}}

\item{ranges}{Set predefined date ranges the user can select from. Each key
is the label for the range, and its value an array with two dates
representing the bounds of the range.
Alternatively, the labels can be specified via `rangeNames`. If that argument is used, `ranges` should not be
named and `rangeNames` will take precedence..}

\item{rangeNames}{Optional character vector specifying the labels for predefined date ranges.
If specified, it will override the names of `ranges`.}

\item{style}{Add CSS-styles to the input.}

\item{class}{Custom class}
}
\description{
Change the start and end values of a daterangepicker on the client
}
\seealso{
Other daterangepicker Functions: 
\code{\link{daterangepickerOptions}()},
\code{\link{daterangepicker}()}
}
\concept{daterangepicker Functions}
